package NewsRecs;

import java.util.ArrayList;
import java.util.List;

public class User {
    private String userID;
    private String username;
    private String password;
    private List<String> preferences;
    private List<Articles> readingHistory;

    public User(String userID, String username, String password) {
        this.userID = userID;
        this.username = username;
        this.password = password;
        this.preferences = new ArrayList<>();
        this.readingHistory = new ArrayList<>();
    }

    // Method to create a new User account
    public static User createAccount(String username, String password) {
        return new User(null, username, password); // UserID will be auto-generated by the database
    }

    // Getters for User attributes
    public String getUserID() {
        return userID;
    }

    public void setUserID(String userID) {
        this.userID = userID;
    }

    public String getUsername() {
        return username;
    }

    public String getPassword() {
        return password;
    }

    public List<String> getPreferences() {
        return preferences;
    }

    public List<Articles> getReadingHistory() {
        return readingHistory;
    }

    public String getPrimaryCategory() {
        return preferences.isEmpty() ? "General" : preferences.get(0);  // Default category if none selected
    }

    public void updatePreferences(List<String> newPreferences) {
        this.preferences.clear();
        this.preferences.addAll(newPreferences);
    }

    public void rateArticle(Articles article, int rating, DatabaseHandler dbHandler) {
        dbHandler.saveRating(this.userID, article.getArticleId(), rating);
        addToReadingHistory(article, dbHandler);
    }

    public void addToReadingHistory(Articles article, DatabaseHandler dbHandler) {
        this.readingHistory.add(article);
        dbHandler.saveArticle(article);
    }

    public List<Articles> viewRecommendations(RecommendationEngine recommendationEngine) {
        return recommendationEngine.getRecommendations(this);
    }
}
